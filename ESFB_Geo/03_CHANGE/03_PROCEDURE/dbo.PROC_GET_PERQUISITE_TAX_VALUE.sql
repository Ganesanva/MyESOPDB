DROP PROCEDURE IF EXISTS [PROC_GET_PERQUISITE_TAX_VALUE]
GO

/****** Object:  StoredProcedure [dbo].[PROC_GET_PERQUISITE_TAX_VALUE]    Script Date: 19-07-2022 14:52:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[PROC_GET_PERQUISITE_TAX_VALUE]
  @INSTRUMENT_IDs BIGINT = NULL,        
  @EMPLOYEE_DETAILS  dbo.TYPE_PERQ_VALUE_AUTO_EXE READONLY,        
  @CalledFrom VARCHAR(50) = NULL,        
  @ISTEMPLATE INT =NULL        
AS        
BEGIN            
 SET NOCOUNT ON;             
   DECLARE @ISPERQUSITE_VAL TINYINT,@ISROPORTIONATE_VAL  TINYINT,@EXCEPTFOR_PERQUISITE NVARCHAR(50)            
    ,@EXCEPTFOR_PROPORTIONATE VARCHAR(50),@MN_VALUE INT,@MX_VALUE INT,@INSTRUMENT_ID BIGINT ,@EMPLOYEE_ID  VARCHAR(50),@GRANTOPTIONID VARCHAR(100) ,@GRANTDATE  VARCHAR(200) ,@VESTINGDATE VARCHAR(200), @EXERCISE_DATE  DATETIME              
    ,@FMV_PRICE NUMERIC(18,9),@FORMULA NVARCHAR(500),@EXERCISEPRICE DECIMAL(18,4),@OPTIONVESTED  NUMERIC(18,9),@FACEVAUE NUMERIC(18,9),@FMV_VALUE NUMERIC(18,9)            
    ,@EXERCISE_PRICE NUMERIC(18,9),@EXCEPT_FOR_PROPORT_VAL TINYINT,@EXCEPT_FOR_PERQ_VAL TINYINT,@PERQ_PRICE INT,@PERQ_FORMULA NVARCHAR(500),@OPTIONEXERCISED  NUMERIC(18,9)            
    ,@SQL NVARCHAR(MAX),@result FLOAT,@EXERCISEDATE DATETIME,@EMPLOYEE_STATUS INT , @EMPLOYEEID VARCHAR(50),@EMPLOYEE_COUNTRY_ID INT,@EVENTOFINCIDENCE INT,@GRANTED_OPTION NUMERIC(18,9),@PERQCOUNT VARCHAR(500)             
    ,@SETTLEMENT_PRICE NUMERIC(18,9),@SCHEMEID VARCHAR(500),@tempdate VARCHAR(200),@CHECK_FLAG INT,@GRANTLEGSERIALNO BIGINT ,@TEMP_EXERCISEID BIGINT            
     ,@ROUNDING_UP TINYINT,@FRACTION_PAID_CASH TINYINT,@SHARE_ARISING_APPR_VAL NUMERIC(18,9),@ISAPPLICABLE INT
  -- CREATE TEMP TABLE --            
  CREATE TABLE #TEMP_EMPLOYEE_DETAILS            
    (              
       ID INT IDENTITY(1,1) NOT NULL,INSTRUMENT_ID BIGINT ,EMPLOYEE_ID  VARCHAR(50),EXERCISE_PRICE  NUMERIC(18,9 ),OPTION_VESTED NUMERIC(18,9),FMV_VALUE NUMERIC(18,9),OPTION_EXERCISED NUMERIC(18,9),            
       GRANTED_OPTIONS NUMERIC(18,9),EXERCISE_DATE  DATETIME ,GRANTOPTIONID VARCHAR(100)  NUll,GRANTDATE  VARCHAR(200) NUll,VESTINGDATE VARCHAR(200) NUll,GRANTLEGSERIALNO BIGINT ,TEMP_EXERCISEID BIGINT                   
    )             
                     
     CREATE TABLE #TEMP_PERQUISITE_DETAILS            
    (            
       ID INT IDENTITY(1,1) NOT NULL,INSTRUMENT_ID BIGINT,EMPLOYEE_ID VARCHAR(50),EXERCISE_PRICE NUMERIC(18,9),OPTION_VESTED NUMERIC(18,9),EXERCISE_DATE DATETIME,PERQ_VALUE NUMERIC(18,9),EVENTOFINCIDENCE INT,FMV_VALUE NUMERIC(18,9),OPTION_EXERCISED NUMERIC(18,9),GRANTED_OPTIONS NUMERIC(18,9)        
      ,GRANTOPTIONID VARCHAR(100) NUll,GRANTDATE VARCHAR(200) NUll,VESTINGDATE VARCHAR(200) NUll,STOCK_VALUE NUMERIC (18,9)            
    )            
                
     CREATE TABLE #TEMP_PERQPROP_DETAILS            
    (            
       ID INT IDENTITY(1,1) NOT NULL,INSTRUMENT_ID BIGINT ,EMPLOYEE_ID VARCHAR(50),EXERCISE_PRICE NUMERIC(18,9),OPTION_VESTED NUMERIC(18,9),EXERCISE_DATE DATETIME,PERQ_VALUE NUMERIC(18,9),EVENTOFINCIDENCE INT,FMV_VALUE NUMERIC(18,9),OPTION_EXERCISED NUMERIC(18,9),GRANTED_OPTIONS NUMERIC(18,9)        
      ,GRANTOPTIONID VARCHAR(100)NUll,GRANTDATE VARCHAR(200) NUll,VESTINGDATE VARCHAR(200) NUll ,GRANTLEGSERIALNO BIGINT,FROM_DATE DATETIME,TO_DATE DATETIME,TEMP_EXERCISEID BIGINT  ,STOCK_VALUE NUMERIC(18,9)          
    )            
                 
     CREATE TABLE #TEMP_FORMULA            
    (            
  FORMULA_DESC VARCHAR(500),EVENTOFINCIDENCE INT              
     )                        
                         
    CREATE TABLE #TEMP_FINAL_PRAPORTIONATE            
   (            
     ID INT IDENTITY(1,1) NOT NULL,INSTRUMENT_ID BIGINT  ,EMPLOYEE_ID  VARCHAR(50),EXERCISE_PRICE NUMERIC(18,9),OPTION_VESTED NUMERIC(18,9),EXERCISE_DATE DATETIME,PERQ_VALUE NUMERIC(18,9),EVENTOFINCIDENCE INT,FMV_VALUE NUMERIC(18,9),OPTION_EXERCISED NUMERIC(18,9),GRANTED_OPTIONS NUMERIC(18,9)        
     ,GRANTOPTIONID VARCHAR(100)  NUll,GRANTDATE  VARCHAR(200) NUll,VESTINGDATE VARCHAR(200) NUll,OLD_PERQ_VALUE NUMERIC(18,4) NULL,GRANTLEGSERIALNO BIGINT,FROM_DATE DATETIME,TO_DATE DATETIME,TEMP_EXERCISEID BIGINT,STOCK_VALUE NUMERIC (18,9)              
    )            
                     
     CREATE TABLE #TEMP_SETTLEMENT_PRICE            
    (            
        SARID BIGINT,ID BIGINT,INSTRUMENT_ID BIGINT,EMPLOYEE_ID  VARCHAR(50),GRANTDATE VARCHAR(200) NUll,VESTINGDATE VARCHAR(200) NUll,            
        EXERCISE_DATE DATETIME,SAR_SETTLEMENT_VALUE NUMERIC(18,9), TAXFLAG VARCHAR(500),EXERCISE_PRICE NUMERIC(18,9),SCHEMEID VARCHAR(500),GRANTOPTIONID VARCHAR(100)  NUll            
    )            
                
    CREATE TABLE #TEMP_PERQ_COUNTRY_DAYS            
 (              
  ID INT IDENTITY(1,1) NOT NULL,INSTRUMENT_ID BIGINT,EMPLOYEE_ID VARCHAR(50),COUNTRY_ID INT,GRANTOPTIONID VARCHAR(100),TOT_DAYS FLOAT NULL,FMV_PRICE NUMERIC(18,9), VESTINGDATE VARCHAR(200)NUll            
  ,GRANTLEGSERIALNO BIGINT NULL,FROM_DATE DATETIME,TO_DATE DATETIME,TEMP_EXERCISEID BIGINT ,STOCK_VALUE NUMERIC(18,9)           
 )                
                
                  
 BEGIN TRY             
                     
  -- INSERT VALUE INTO TEMP TABLE --            
  INSERT INTO #TEMP_EMPLOYEE_DETAILS             
  (            
   INSTRUMENT_ID, EMPLOYEE_ID, EXERCISE_PRICE, OPTION_VESTED, FMV_VALUE, OPTION_EXERCISED,GRANTED_OPTIONS,EXERCISE_DATE,            
   GRANTOPTIONID ,GRANTDATE ,VESTINGDATE,GRANTLEGSERIALNO,TEMP_EXERCISEID            
  )            
   SELECT  INSTRUMENT_ID, (SELECT TOP 1 EmployeeID from EmployeeMaster Where LoginID=EMPLOYEE_ID AND Deleted = 0 ORDER BY LastUpdatedOn desc), EXERCISE_PRICE, OPTION_VESTED, FMV_VALUE, OPTION_EXERCISED,GRANTED_OPTIONS,EXERCISE_DATE            
  ,GRANTOPTIONID ,GRANTDATE ,VESTINGDATE,GRANTLEGSERIALNO,TEMP_EXERCISEID FROM @EMPLOYEE_DETAILS            
                   
  SELECT @MN_VALUE = MIN(ID),@MX_VALUE = MAX(ID) FROM #TEMP_EMPLOYEE_DETAILS             
  WHILE(@MN_VALUE <= @MX_VALUE)            
  BEGIN               
               
   SELECT @EXERCISEPRICE = EXERCISE_PRICE,@OPTIONVESTED = OPTION_VESTED,@FMV_VALUE = FMV_VALUE,@OPTIONEXERCISED = OPTION_EXERCISED,             
   @EMPLOYEE_ID = EMPLOYEE_ID,@INSTRUMENT_ID = INSTRUMENT_ID,@GRANTED_OPTION = GRANTED_OPTIONS,@EXERCISEDATE = EXERCISE_DATE,            
   @GRANTOPTIONID = GRANTOPTIONID ,@GRANTDATE = GRANTDATE ,@VESTINGDATE = VESTINGDATE ,@GRANTLEGSERIALNO = GRANTLEGSERIALNO,@TEMP_EXERCISEID = TEMP_EXERCISEID            
   FROM             
    #TEMP_EMPLOYEE_DETAILS             
   WHERE            
    ID = @MN_VALUE            
                
   SELECT @ISPERQUSITE_VAL = CAL_PERQUSITE_VAL,@ISROPORTIONATE_VAL = CAL_PROPORTIONATE_VAL,@EXCEPTFOR_PERQUISITE = EXCEPT_FOR_PERQUISITE            
   ,@EXCEPTFOR_PROPORTIONATE = EXCEPT_FOR_PROPORTIONATE ,@EXCEPT_FOR_PROPORT_VAL = EXCEPT_FOR_PROPORT_VAL,@EXCEPT_FOR_PERQ_VAL = EXCEPT_FOR_PERQ_VAL            
   FROM             
    COMPANY_INSTRUMENT_MAPPING            
   WHERE             
    MIT_ID = @INSTRUMENT_ID            
                        
                                    
    SET @SCHEMEID = (SELECT SchemeId FROM GrantOptions WHERE GrantOptionId = @GRANTOPTIONID)            
    SELECT @ROUNDING_UP = ROUNDING_UP,@FRACTION_PAID_CASH = FRACTION_PAID_CASH FROM Scheme WHERE SchemeId = @SCHEMEID            
                
     -- BY DEFAULT ROUNDING UP VALUE SHOULD BE HIGHER --            
     IF((@ROUNDING_UP IS NULL) and  (@FRACTION_PAID_CASH IS NULL) )            
     BEGIN            
        SET @ROUNDING_UP = 1            
     END            
                
   DECLARE @TYPE_SETTLEMENT_PRICE_RES dbo.TYPE_SAR_SETTLEMENT_PRICE            
   DELETE  FROM @TYPE_SETTLEMENT_PRICE_RES            
                        
   INSERT INTO @TYPE_SETTLEMENT_PRICE_RES SELECT @INSTRUMENT_ID,@EMPLOYEE_ID,@GRANTDATE , CONVERT(date,@VESTINGDATE),            
   @EXERCISEDATE,@EXERCISEPRICE,@SCHEMEID,@GRANTOPTIONID               
              
   EXEC PROC_GET_SAR_SETTELEMENT_PRICCE @TYPE_SETTLEMENT_PRICE_RES, @CalledFrom = 'SSRSReport'              
                 
       DELETE FROM #TEMP_SETTLEMENT_PRICE           
     INSERT INTO #TEMP_SETTLEMENT_PRICE(SARID ,ID ,INSTRUMENT_ID ,EMPLOYEE_ID  ,GRANTDATE ,VESTINGDATE,EXERCISE_DATE ,SAR_SETTLEMENT_VALUE, TAXFLAG ,EXERCISE_PRICE,SCHEMEID,GRANTOPTIONID )             
     SELECT SARID, ID, INSTRUMENT_ID, EMPLOYEE_ID, GRANTDATE, VESTINGDATE, EXERCISE_DATE, SAR_SETTLEMENT_VALUE, TAXFLAG, EXERCISE_PRICE, SCHEME_ID, GRANTOPTIONID FROM TEMP_SAR_SETTLEMENT_FINAL_DETAILS               
            
     SET @SETTLEMENT_PRICE = (SELECT SAR_SETTLEMENT_VALUE FROM #TEMP_SETTLEMENT_PRICE)            
                                         
   -- GET FACE VALUE --              
   SELECT @FACEVAUE = FaceVaue FROM CompanyParameters             
               
      DECLARE @TYPE_SHARE_APPR_VALUE dbo.TYPE_SHARE_APPR_VALUE            
   DELETE  FROM @TYPE_SHARE_APPR_VALUE            
               
    INSERT INTO @TYPE_SHARE_APPR_VALUE             
    VALUES( @INSTRUMENT_ID,@EMPLOYEE_ID,@GRANTDATE,@VESTINGDATE,@EXERCISEDATE,@EXERCISEPRICE,@SCHEMEID,@GRANTOPTIONID,@SETTLEMENT_PRICE,@OPTIONEXERCISED,@OPTIONVESTED,@FACEVAUE,ISNULL(@FMV_VALUE,0.00) )            
        
       EXEC PROC_GET_SHARE_APPR_VALUE @TYPE_SHARE_APPR_VALUE             
                
       SET @SHARE_ARISING_APPR_VAL = (SELECT SHARE_APPRECIATION_VALUE FROM TEMP_APPRECIATION_FINAL_DETAILS)            
                  /* PRINT 'TEST ABCD88'             
                   PRINT @ISPERQUSITE_VAL            
                   PRINT @EXCEPT_FOR_PERQ_VAL            
                   PRINT @EXCEPTFOR_PERQUISITE            
                   PRINT  @EXCEPT_FOR_PERQ_VAL   */    
                       
                   
   IF(@ISPERQUSITE_VAL = 1)             
   BEGIN            
       -- EXCEPTION FOR  --                           
       IF(@EXCEPT_FOR_PERQ_VAL = 1)            
    BEGIN            
        -- EXCEPTION FOR RESIDENT  --            
    IF(@EXCEPTFOR_PERQUISITE = 'R')             
    BEGIN       
    
     SELECT @EMPLOYEE_STATUS = RT.id             
     FROM             
      EmployeeMaster AS EM            
         INNER JOIN ResidentialType AS RT ON EM.ResidentialStatus = RT.ResidentialStatus            
     WHERE             
      EM.EmployeeID = @EMPLOYEE_ID                
                  
                 
     SET @CHECK_FLAG = 0                  
                    SELECT @CHECK_FLAG = COUNT(PFC_ID)              
                    FROM            
       PERQUISITE_FORMULA_CONFIG AS PFC              
       INNER JOIN COMPANY_INSTRUMENT_MAP_DETAILS AS CIMPD ON PFC.Residential_ID = CIMPD.RESIDENTIAL_ID                         
     WHERE            
      ((CONVERT(DATE, PFC.APPLICABLE_FROM_DATE) <= CONVERT(DATE,@EXERCISEDATE)) AND (CONVERT(DATE, ISNULL(PFC.APPLICABLE_TO_DATE, @EXERCISEDATE)) >=  CONVERT(DATE,@EXERCISEDATE)))                           
          AND CIMPD.SETTING_TYPE = 'PERQUISITE' AND CIMPD.ACTIVE = 1 AND PFC.MIT_ID = @INSTRUMENT_ID AND CIMPD.RESIDENTIAL_ID = @EMPLOYEE_STATUS            
                 
	  	IF(@CHECK_FLAG > 0)  
	BEGIN   
		SET @ISAPPLICABLE = 0        
		SELECT @ISAPPLICABLE = COUNT(PFC_ID)    
		FROM  
		PERQUISITE_FORMULA_CONFIG AS PFC    
		INNER JOIN COMPANY_INSTRUMENT_MAP_DETAILS AS CIMPD ON PFC.Residential_ID = CIMPD.RESIDENTIAL_ID               
		WHERE  
		((CONVERT(DATE, PFC.APPLICABLE_FROM_DATE) <= CONVERT(DATE,@EXERCISEDATE)) AND (CONVERT(DATE, ISNULL(PFC.APPLICABLE_TO_DATE, @EXERCISEDATE)) >=  CONVERT(DATE,@EXERCISEDATE)))                 
		AND CIMPD.SETTING_TYPE = 'PERQUISITE' AND CIMPD.ACTIVE = 1 AND PFC.MIT_ID = @INSTRUMENT_ID AND CIMPD.RESIDENTIAL_ID = @EMPLOYEE_STATUS AND CIMPD.APPLICABILITY = 1 

	END
     DELETE FROM #TEMP_FORMULA            
	 IF(@ISAPPLICABLE > 0)
	BEGIN  
     IF(@CHECK_FLAG > 0)            
     BEGIN            
         -- GET A RESIDENT LEVEL FORMULA AND EVENT OF INCIDENCE --            
      SELECT @PERQ_FORMULA =  FORMULA_DESCRIPTION,@EVENTOFINCIDENCE =  EVENT_OF_INCIDENCE_ID             
      FROM PERQUISITE_FORMULA_CONFIG AS PFC              
      INNER JOIN COMPANY_INSTRUMENT_MAP_DETAILS AS CIMPD ON PFC.Residential_ID = CIMPD.RESIDENTIAL_ID                         
      WHERE((CONVERT(DATE, PFC.APPLICABLE_FROM_DATE) <= CONVERT(DATE,@EXERCISEDATE)) AND (CONVERT(DATE, ISNULL(PFC.APPLICABLE_TO_DATE, @EXERCISEDATE)) >=  CONVERT(DATE,@EXERCISEDATE)))                           
      AND CIMPD.SETTING_TYPE = 'PERQUISITE' AND CIMPD.ACTIVE = 1 AND PFC.MIT_ID = @INSTRUMENT_ID AND CIMPD.RESIDENTIAL_ID = @EMPLOYEE_STATUS            
            
      INSERT INTO #TEMP_FORMULA(FORMULA_DESC)                          
      SELECT FORMULA_DESCRIPTION             
      FROM PERQUISITE_FORMULA_CONFIG AS PFC              
      INNER JOIN COMPANY_INSTRUMENT_MAP_DETAILS AS CIMPD ON PFC.Residential_ID = CIMPD.RESIDENTIAL_ID                         
      WHERE((CONVERT(DATE, PFC.APPLICABLE_FROM_DATE) <= CONVERT(DATE,@EXERCISEDATE)) AND (CONVERT(DATE, ISNULL(PFC.APPLICABLE_TO_DATE, @EXERCISEDATE)) >=  CONVERT(DATE,@EXERCISEDATE)))                           
      AND CIMPD.SETTING_TYPE = 'PERQUISITE' AND CIMPD.ACTIVE = 1 AND PFC.MIT_ID = @INSTRUMENT_ID AND CIMPD.RESIDENTIAL_ID = @EMPLOYEE_STATUS            
     END             
     ELSE            
     BEGIN            
      -- GET A COMPANY LEVEL FORMULA AND EVENT OF INCIDENCE --            
      SELECT @PERQ_FORMULA =  FORMULA_DESCRIPTION,@EVENTOFINCIDENCE =  EVENT_OF_INCIDENCE_ID             
      FROM PERQUISITE_FORMULA_CONFIG AS PFC                            
      WHERE((CONVERT(DATE, PFC.APPLICABLE_FROM_DATE) <= CONVERT(DATE,@EXERCISEDATE)) AND (CONVERT(DATE, ISNULL(PFC.APPLICABLE_TO_DATE, @EXERCISEDATE)) >=  CONVERT(DATE,@EXERCISEDATE)))                           
      AND ISNULL(PFC.RESIDENTIAL_ID,0) = 0 AND ISNULL (PFC.COUNTRY_ID,0) = 0 AND PFC.MIT_ID = @INSTRUMENT_ID            
            
      INSERT INTO #TEMP_FORMULA(FORMULA_DESC)                          
      SELECT FORMULA_DESCRIPTION             
      FROM PERQUISITE_FORMULA_CONFIG AS PFC              
      WHERE((CONVERT(DATE, PFC.APPLICABLE_FROM_DATE) <= CONVERT(DATE,@EXERCISEDATE)) AND (CONVERT(DATE, ISNULL(PFC.APPLICABLE_TO_DATE, @EXERCISEDATE)) >=  CONVERT(DATE,@EXERCISEDATE)))                           
      AND ISNULL(PFC.RESIDENTIAL_ID,0) = 0 AND ISNULL (PFC.COUNTRY_ID,0) = 0 AND PFC.MIT_ID = @INSTRUMENT_ID            
     END            
               
     IF EXISTS( SELECT FORMULA_DESC FROM #TEMP_FORMULA WHERE FORMULA_DESC  LIKE '%@FMV@%')                     
     BEGIN                                                    
      SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@FMV@', @FMV_VALUE )                                   
     END            
     IF EXISTS(SELECT FORMULA_DESC FROM #TEMP_FORMULA WHERE FORMULA_DESC    LIKE '%@Exercise Price@%')            
     BEGIN              
      SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@Exercise Price@', @EXERCISEPRICE )                
     END                
     IF EXISTS(SELECT FORMULA_DESC FROM #TEMP_FORMULA WHERE FORMULA_DESC    LIKE '%@Option Exercised@%')            
     BEGIN               
      SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@Option Exercised@',  @OPTIONEXERCISED)                
     END                
     IF EXISTS(SELECT FORMULA_DESC FROM #TEMP_FORMULA WHERE FORMULA_DESC  LIKE   '%@Face Value@%')            
     BEGIN            
      SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@Face Value@', @FACEVAUE )                            
     END                         
     IF EXISTS(SELECT FORMULA_DESC FROM #TEMP_FORMULA WHERE FORMULA_DESC  LIKE '%@Option Granted@%')            
     BEGIN            
      SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@Option Granted@', @GRANTED_OPTION )                           
     END                         
     IF EXISTS(SELECT FORMULA_DESC FROM #TEMP_FORMULA WHERE FORMULA_DESC  LIKE '%@Option Vested@%')            
     BEGIN            
      SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@Option Vested@', @OPTIONVESTED )                            
     END                        
     IF EXISTS(SELECT FORMULA_DESC FROM #TEMP_FORMULA WHERE FORMULA_DESC  LIKE '%@Settlement Price@%')            
     BEGIN            
      SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@Settlement Price@', @SETTLEMENT_PRICE )                          
     END                                          
     IF EXISTS(SELECT FORMULA_DESC FROM #TEMP_FORMULA WHERE FORMULA_DESC  LIKE '%@Shares arising out of appreciation@%')            
     BEGIN            
      IF(@ROUNDING_UP = 0)            
      BEGIN            
       SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@Shares arising out of appreciation@',  @SHARE_ARISING_APPR_VAL)            
      END            
     ELSE  IF(@ROUNDING_UP = 1)             
      SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@Shares arising out of appreciation@', @SHARE_ARISING_APPR_VAL)                          
     END            
                      PRINT @PERQ_FORMULA            
     SET @SQL = N'set @result = ' + @PERQ_FORMULA            
     EXEC sp_executesql @SQL, N'@result float output', @result out            
   END
	ELSE
	BEGIN
	   SET @result = '-990099'
	END                   
            
                    PRINT @result            
     INSERT INTO  #TEMP_PERQUISITE_DETAILS(INSTRUMENT_ID,EMPLOYEE_ID,PERQ_VALUE,EVENTOFINCIDENCE,EXERCISE_PRICE,OPTION_VESTED,EXERCISE_DATE,FMV_VALUE,OPTION_EXERCISED,GRANTED_OPTIONS ,GRANTOPTIONID,GRANTDATE ,VESTINGDATE )            
     SELECT @INSTRUMENT_ID,@EMPLOYEE_ID ,@result,@EVENTOFINCIDENCE,@EXERCISEPRICE,@OPTIONVESTED,@EXERCISEDATE,@FMV_VALUE,@OPTIONEXERCISED,@GRANTED_OPTION,@GRANTOPTIONID,@GRANTDATE,@VESTINGDATE            
            
     INSERT INTO  #TEMP_PERQPROP_DETAILS(INSTRUMENT_ID,EMPLOYEE_ID,PERQ_VALUE,EVENTOFINCIDENCE,EXERCISE_PRICE,OPTION_VESTED,EXERCISE_DATE,FMV_VALUE,OPTION_EXERCISED,GRANTED_OPTIONS ,GRANTOPTIONID,GRANTDATE ,VESTINGDATE,STOCK_VALUE )            
     SELECT @INSTRUMENT_ID,@EMPLOYEE_ID ,@result,@EVENTOFINCIDENCE,@EXERCISEPRICE,@OPTIONVESTED,@EXERCISEDATE,@FMV_VALUE,@OPTIONEXERCISED,@GRANTED_OPTION,@GRANTOPTIONID,@GRANTDATE,@VESTINGDATE,@SHARE_ARISING_APPR_VAL                
            
     IF(@ISROPORTIONATE_VAL = 1)            
     BEGIN            
      DECLARE @TYPE_PROP_VALUE_RES dbo.TYPE_PROP_VALUE_AUTO_EXE            
      DELETE  FROM @TYPE_PROP_VALUE_RES            
            
      INSERT INTO @TYPE_PROP_VALUE_RES SELECT INSTRUMENT_ID,EMPLOYEE_ID  ,PERQ_VALUE ,EVENTOFINCIDENCE,EXERCISE_PRICE  ,            
      OPTION_VESTED ,FMV_VALUE ,OPTION_EXERCISED ,GRANTED_OPTIONS ,EXERCISE_DATE ,GRANTOPTIONID ,GRANTDATE ,VESTINGDATE,GRANTLEGSERIALNO ,FROM_DATE,TO_DATE,STOCK_VALUE             
      FROM #TEMP_PERQPROP_DETAILS         
      DELETE FROM #TEMP_PERQPROP_DETAILS                                       
    
      INSERT INTO #TEMP_PERQ_COUNTRY_DAYS(INSTRUMENT_ID,EMPLOYEE_ID,COUNTRY_ID,GRANTOPTIONID,TOT_DAYS,VESTINGDATE,GRANTLEGSERIALNO,FROM_DATE,TO_DATE,TEMP_EXERCISEID,STOCK_VALUE)    
      EXEC PROC_GET_PROPORTIONATE_TAX_VALUE @INSTRUMENT_ID,@TYPE_PROP_VALUE_RES,@ISTEMPLATE                                                         
     END             
     ELSE            
     BEGIN      
                  
     INSERT INTO #TEMP_PERQ_COUNTRY_DAYS( INSTRUMENT_ID,EMPLOYEE_ID,COUNTRY_ID,GRANTOPTIONID,TOT_DAYS,VESTINGDATE,GRANTLEGSERIALNO,FROM_DATE,TO_DATE,TEMP_EXERCISEID,STOCK_VALUE)    
     SELECT @INSTRUMENT_ID  ,@EMPLOYEE_ID ,0 ,@GRANTOPTIONID,1,@VESTINGDATE,@GRANTLEGSERIALNO ,Null,NULL,@TEMP_EXERCISEID ,@SHARE_ARISING_APPR_VAL            
        
       
     END              
    END            
     -- EXCEPTION FOR COUNTRY  --            
    ELSE IF(@EXCEPTFOR_PERQUISITE = 'C')            
    BEGIN               
       print 'perq_country'            
     SELECT TOP 1 @EMPLOYEE_COUNTRY_ID =  sub.Country            
      FROM             
      (            
       SELECT CASE dbo.FN_GET_COM_CODE_VALUE(FFC.EVENT_OF_INCIDENCE_ID)             
         WHEN 'Grant Date' THEN CONVERT(DATE,@GRANTDATE)            
         WHEN 'Vesting Date' THEN CONVERT(DATE,@VESTINGDATE)            
         WHEN  'Exercise Date' THEN CONVERT(DATE,@EXERCISEDATE)            
        END AS TransDate,             
        (            
          SELECT TOP 1 CM.ID             
          FROM AUDIT_TRAIL_FOR_TRACK_MASSUPLOAD AS ATM              
            INNER JOIN CountryMaster AS CM ON CM.CountryName = ATM.[Moved To]             
              WHERE ATM.EmployeeId= @EMPLOYEE_ID            
             AND UPPER(Field) =UPPER('Tax Identifier Country') AND              
             CONVERT(DATE,ATM.[From Date of Movement]) <= CONVERT(DATE,             
             CASE dbo.FN_GET_COM_CODE_VALUE(FFC.EVENT_OF_INCIDENCE_ID)            
             WHEN 'Grant Date' THEN CONVERT(DATE,@GRANTDATE)            
             WHEN 'Vesting Date' THEN CONVERT(DATE,@VESTINGDATE )            
             WHEN  'Exercise Date' THEN CONVERT(DATE,@EXERCISEDATE)            
                  END))AS Country            
         FROM PERQUISITE_FORMULA_CONFIG  AS FFC                    
           INNER JOIN  COMPANY_INSTRUMENT_MAP_DETAILS AS CIMPD ON FFC.Country_ID = CIMPD.Country_ID                
         WHERE CIMPD.SETTING_TYPE = 'PERQUISITE' AND CIMPD.ACTIVE = 1 AND FFC.MIT_ID = @INSTRUMENT_ID                  
           AND ((CONVERT(DATE, FFC.APPLICABLE_FROM_DATE) <= CONVERT(DATE,@EXERCISEDATE)) AND (CONVERT(DATE,ISNULL(FFC.APPLICABLE_TO_DATE, @EXERCISEDATE)) >=  CONVERT(DATE,@EXERCISEDATE)))                 
           AND  ISNULL( FFC.Residential_ID,0) = 0   AND FFC.Country_ID > 0            
         ) sub             
      WHERE ISNULL(sub.Country, 0) <> 0            
       ORDER BY TransDate ASC            
                 
     SET @CHECK_FLAG = 0                  
                    SELECT @CHECK_FLAG = COUNT(PFC_ID)                       
     FROM             
      PERQUISITE_FORMULA_CONFIG AS PFC              
      INNER JOIN  COMPANY_INSTRUMENT_MAP_DETAILS AS CIMPD ON PFC.COUNTRY_ID = CIMPD.COUNTRY_ID                         
     WHERE            
      ((CONVERT(DATE, PFC.APPLICABLE_FROM_DATE) <= CONVERT(DATE,@EXERCISEDATE)) AND (CONVERT(DATE, ISNULL(PFC.APPLICABLE_TO_DATE, @EXERCISEDATE)) >=  CONVERT(DATE,@EXERCISEDATE)))                           
      AND CIMPD.SETTING_TYPE = 'PERQUISITE' AND CIMPD.ACTIVE = 1 AND CIMPD.COUNTRY_ID = @EMPLOYEE_COUNTRY_ID  AND PFC.MIT_ID = @INSTRUMENT_ID            
                
	     IF(@CHECK_FLAG > 0)  
	BEGIN   
		SET @ISAPPLICABLE = 0        
		
		 SELECT @ISAPPLICABLE = COUNT(PFC_ID)             
     FROM   
      PERQUISITE_FORMULA_CONFIG AS PFC    
      INNER JOIN  COMPANY_INSTRUMENT_MAP_DETAILS AS CIMPD ON PFC.COUNTRY_ID = CIMPD.COUNTRY_ID               
     WHERE  
      ((CONVERT(DATE, PFC.APPLICABLE_FROM_DATE) <= CONVERT(DATE,@EXERCISEDATE)) AND (CONVERT(DATE, ISNULL(PFC.APPLICABLE_TO_DATE, @EXERCISEDATE)) >=  CONVERT(DATE,@EXERCISEDATE)))                 
      AND CIMPD.SETTING_TYPE = 'PERQUISITE' AND CIMPD.ACTIVE = 1 AND CIMPD.COUNTRY_ID = @EMPLOYEE_COUNTRY_ID  AND PFC.MIT_ID = @INSTRUMENT_ID AND  	CIMPD.APPLICABILITY = 1 
	   print 98989
	END
      DELETE FROM #TEMP_FORMULA            
	  
IF(@ISAPPLICABLE > 0)
 BEGIN
      IF(@CHECK_FLAG > 0 )            
      BEGIN            
            -- GET A COUNTRY LEVEL FORMULA AND EVENT OF INCIDENCE --            
       SELECT @EVENTOFINCIDENCE =  EVENT_OF_INCIDENCE_ID,@FORMULA = FORMULA_DESCRIPTION                       
       FROM PERQUISITE_FORMULA_CONFIG AS PFC              
       INNER JOIN COMPANY_INSTRUMENT_MAP_DETAILS AS CIMPD ON PFC.COUNTRY_ID = CIMPD.COUNTRY_ID                         
       WHERE((CONVERT(DATE, PFC.APPLICABLE_FROM_DATE) <= CONVERT(DATE,@EXERCISEDATE)) AND (CONVERT(DATE, ISNULL(PFC.APPLICABLE_TO_DATE, @EXERCISEDATE)) >=  CONVERT(DATE,@EXERCISEDATE)))                           
       AND CIMPD.SETTING_TYPE = 'PERQUISITE' AND CIMPD.ACTIVE = 1 AND CIMPD.COUNTRY_ID = @EMPLOYEE_COUNTRY_ID AND  PFC.MIT_ID = @INSTRUMENT_ID                 
            
            
       INSERT INTO #TEMP_FORMULA(FORMULA_DESC)                          
       SELECT FORMULA_DESCRIPTION             
       FROM PERQUISITE_FORMULA_CONFIG AS PFC              
       INNER JOIN COMPANY_INSTRUMENT_MAP_DETAILS AS CIMPD ON PFC.COUNTRY_ID = CIMPD.COUNTRY_ID                         
       WHERE((CONVERT(DATE, PFC.APPLICABLE_FROM_DATE) <= CONVERT(DATE,@EXERCISEDATE)) AND (CONVERT(DATE, ISNULL(PFC.APPLICABLE_TO_DATE, @EXERCISEDATE)) >=  CONVERT(DATE,@EXERCISEDATE)))                           
       AND CIMPD.SETTING_TYPE = 'PERQUISITE' AND CIMPD.ACTIVE = 1 AND PFC.MIT_ID = @INSTRUMENT_ID AND CIMPD.COUNTRY_ID = @EMPLOYEE_COUNTRY_ID            
            
       SELECT @PERQ_FORMULA = FORMULA_DESCRIPTION,@EVENTOFINCIDENCE =  EVENT_OF_INCIDENCE_ID              
       FROM PERQUISITE_FORMULA_CONFIG AS PFC              
       INNER JOIN COMPANY_INSTRUMENT_MAP_DETAILS AS CIMPD ON PFC.COUNTRY_ID = CIMPD.COUNTRY_ID                         
       WHERE((CONVERT(DATE, PFC.APPLICABLE_FROM_DATE) <= CONVERT(DATE,@EXERCISEDATE)) AND (CONVERT(DATE, ISNULL(PFC.APPLICABLE_TO_DATE, @EXERCISEDATE)) >=  CONVERT(DATE,@EXERCISEDATE)))                           
       AND CIMPD.SETTING_TYPE = 'PERQUISITE' AND CIMPD.ACTIVE = 1 AND PFC.MIT_ID = @INSTRUMENT_ID AND CIMPD.COUNTRY_ID = @EMPLOYEE_COUNTRY_ID            
            
         END            
         ELSE            
         BEGIN            
                -- GET A COMPANY LEVEL FORMULA AND EVENT OF INCIDENCE --            
       SELECT @EVENTOFINCIDENCE =  EVENT_OF_INCIDENCE_ID,@FORMULA = FORMULA_DESCRIPTION                       
       FROM PERQUISITE_FORMULA_CONFIG AS PFC                                  
       WHERE((CONVERT(DATE, PFC.APPLICABLE_FROM_DATE) <= CONVERT(DATE,@EXERCISEDATE)) AND (CONVERT(DATE, ISNULL(PFC.APPLICABLE_TO_DATE, @EXERCISEDATE)) >=  CONVERT(DATE,@EXERCISEDATE)))                           
       AND ISNULL(PFC.RESIDENTIAL_ID,0) = 0 AND ISNULL (PFC.COUNTRY_ID,0) = 0 AND PFC.MIT_ID = @INSTRUMENT_ID            
            
            
       INSERT INTO #TEMP_FORMULA(FORMULA_DESC)                          
       SELECT FORMULA_DESCRIPTION             
       FROM PERQUISITE_FORMULA_CONFIG AS PFC                                
       WHERE((CONVERT(DATE, PFC.APPLICABLE_FROM_DATE) <= CONVERT(DATE,@EXERCISEDATE)) AND (CONVERT(DATE, ISNULL(PFC.APPLICABLE_TO_DATE, @EXERCISEDATE)) >=  CONVERT(DATE,@EXERCISEDATE)))                           
       AND ISNULL(PFC.RESIDENTIAL_ID,0) = 0 AND ISNULL (PFC.COUNTRY_ID,0) = 0 AND PFC.MIT_ID = @INSTRUMENT_ID            
            
            
       SELECT @PERQ_FORMULA = FORMULA_DESCRIPTION,@EVENTOFINCIDENCE =  EVENT_OF_INCIDENCE_ID         
       FROM PERQUISITE_FORMULA_CONFIG AS PFC              
       WHERE((CONVERT(DATE, PFC.APPLICABLE_FROM_DATE) <= CONVERT(DATE,@EXERCISEDATE)) AND (CONVERT(DATE, ISNULL(PFC.APPLICABLE_TO_DATE, @EXERCISEDATE)) >=  CONVERT(DATE,@EXERCISEDATE)))                           
       AND ISNULL(PFC.RESIDENTIAL_ID,0) = 0 AND ISNULL (PFC.COUNTRY_ID,0) = 0 AND PFC.MIT_ID = @INSTRUMENT_ID                      
          END                                    
                   
                             
     IF EXISTS( SELECT FORMULA_DESC FROM #TEMP_FORMULA WHERE FORMULA_DESC LIKE '%@FMV@%')                     
     BEGIN                                                   
      SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@FMV@', @FMV_VALUE )                                 
     END            
     IF EXISTS(SELECT FORMULA_DESC FROM #TEMP_FORMULA WHERE FORMULA_DESC  LIKE '%@Exercise Price@%')            
     BEGIN              
      SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@Exercise Price@', @EXERCISEPRICE )                
     END                
     IF EXISTS(SELECT FORMULA_DESC FROM #TEMP_FORMULA WHERE FORMULA_DESC LIKE '%@Option Exercised@%')            
     BEGIN               
      SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@Option Exercised@',  @OPTIONEXERCISED)                
     END                
     IF EXISTS(SELECT FORMULA_DESC FROM #TEMP_FORMULA WHERE FORMULA_DESC  LIKE   '%@Face Value@%')            
     BEGIN             
    SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@Face Value@', @FACEVAUE )                            
     END                         
     IF EXISTS(SELECT FORMULA_DESC FROM #TEMP_FORMULA WHERE FORMULA_DESC  LIKE '%@Option Granted@%')            
     BEGIN            
      SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@Option Granted@', @GRANTED_OPTION )                           
     END                         
     IF EXISTS(SELECT FORMULA_DESC FROM #TEMP_FORMULA WHERE FORMULA_DESC  LIKE '%@Option Vested@%')            
     BEGIN            
      SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@Option Vested@', @OPTIONVESTED )                            
     END                        
     IF EXISTS(SELECT FORMULA_DESC FROM #TEMP_FORMULA WHERE FORMULA_DESC  LIKE '%@Settlement Price@%')            
     BEGIN            
      SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@Settlement Price@', @SETTLEMENT_PRICE )            
     END                                            
     IF EXISTS(SELECT FORMULA_DESC FROM #TEMP_FORMULA WHERE FORMULA_DESC  LIKE '%@Shares arising out of appreciation@%')            
     BEGIN            
       IF(@ROUNDING_UP = 0)            
       BEGIN            
         SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@Shares arising out of appreciation@',  @SHARE_ARISING_APPR_VAL)            
       END            
       ELSE  IF(@ROUNDING_UP = 1)             
        SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@Shares arising out of appreciation@', @SHARE_ARISING_APPR_VAL)            
                         
     END            
     PRINT @PERQ_FORMULA            
     SET @SQL = N'set @result = ' + @PERQ_FORMULA            
     EXEC sp_executesql @SQL, N'@result float output', @result out            
   END  
    ELSE
	BEGIN
	   SET @result = '-990099'
	END
            
     INSERT INTO  #TEMP_PERQUISITE_DETAILS(INSTRUMENT_ID,EMPLOYEE_ID,PERQ_VALUE,EVENTOFINCIDENCE,EXERCISE_PRICE,OPTION_VESTED,EXERCISE_DATE,FMV_VALUE,OPTION_EXERCISED,GRANTED_OPTIONS ,GRANTOPTIONID,GRANTDATE ,VESTINGDATE )            
     SELECT @INSTRUMENT_ID,@EMPLOYEE_ID ,@result,@EVENTOFINCIDENCE,@EXERCISEPRICE,@OPTIONVESTED,@EXERCISEDATE,@FMV_VALUE,@OPTIONEXERCISED,@GRANTED_OPTION,@GRANTOPTIONID,@GRANTDATE,@VESTINGDATE                 
            
     INSERT INTO  #TEMP_PERQPROP_DETAILS(INSTRUMENT_ID,EMPLOYEE_ID,PERQ_VALUE,EVENTOFINCIDENCE,EXERCISE_PRICE,OPTION_VESTED,EXERCISE_DATE,FMV_VALUE,OPTION_EXERCISED,GRANTED_OPTIONS ,GRANTOPTIONID,GRANTDATE ,VESTINGDATE,GRANTLEGSERIALNO,TEMP_EXERCISEID,STOCK_VALUE)    
     SELECT @INSTRUMENT_ID,@EMPLOYEE_ID ,@result,@EVENTOFINCIDENCE,@EXERCISEPRICE,@OPTIONVESTED,@EXERCISEDATE,@FMV_VALUE,@OPTIONEXERCISED,@GRANTED_OPTION,@GRANTOPTIONID,@GRANTDATE,@VESTINGDATE,@GRANTLEGSERIALNO,@TEMP_EXERCISEID,@SHARE_ARISING_APPR_VAL    
  
     IF(@ISROPORTIONATE_VAL = 1)            
     BEGIN            
      DECLARE @TYPE_PROP_VALUE_COUNT dbo.TYPE_PROP_VALUE_AUTO_EXE            
      DELETE  FROM @TYPE_PROP_VALUE_COUNT            
            
      INSERT INTO @TYPE_PROP_VALUE_COUNT SELECT INSTRUMENT_ID,EMPLOYEE_ID  ,PERQ_VALUE ,EVENTOFINCIDENCE,EXERCISE_PRICE ,            
      OPTION_VESTED ,FMV_VALUE ,OPTION_EXERCISED ,GRANTED_OPTIONS ,EXERCISE_DATE ,GRANTOPTIONID ,GRANTDATE ,VESTINGDATE,GRANTLEGSERIALNO,TEMP_EXERCISEID,STOCK_VALUE              
      FROM #TEMP_PERQPROP_DETAILS              
      DELETE FROM #TEMP_PERQPROP_DETAILS            
         
          INSERT INTO #TEMP_PERQ_COUNTRY_DAYS(INSTRUMENT_ID,EMPLOYEE_ID,COUNTRY_ID,GRANTOPTIONID,TOT_DAYS,VESTINGDATE,GRANTLEGSERIALNO,FROM_DATE,TO_DATE,TEMP_EXERCISEID,STOCK_VALUE)            
          EXEC PROC_GET_PROPORTIONATE_TAX_VALUE @INSTRUMENT_ID,@TYPE_PROP_VALUE_COUNT,@ISTEMPLATE              
     END             
     ELSE            
     BEGIN     
        
                  
            INSERT INTO #TEMP_PERQ_COUNTRY_DAYS( INSTRUMENT_ID,EMPLOYEE_ID,COUNTRY_ID,GRANTOPTIONID,TOT_DAYS,VESTINGDATE,GRANTLEGSERIALNO,FROM_DATE,TO_DATE,TEMP_EXERCISEID,STOCK_VALUE)            
           SELECT @INSTRUMENT_ID  ,@EMPLOYEE_ID ,0 ,@GRANTOPTIONID,1,@VESTINGDATE,@GRANTLEGSERIALNO ,Null,NULL,@TEMP_EXERCISEID,@SHARE_ARISING_APPR_VAL                     
     END              
     END                    
    END             
    IF(Isnull(@EXCEPT_FOR_PERQ_VAL,0) = 0) -- FOR COMPNAY LEVEL --            
    BEGIN                    
       print 'perq_company'    
        DELETE FROM #TEMP_FORMULA            
     INSERT INTO #TEMP_FORMULA(FORMULA_DESC)             
     SELECT FORMULA_DESCRIPTION            
        FROM            
      PERQUISITE_FORMULA_CONFIG AS FFC                          
     WHERE            
      ((CONVERT(DATE, FFC.APPLICABLE_FROM_DATE) <= CONVERT(DATE,@EXERCISEDATE)) AND (CONVERT(DATE, ISNULL(FFC.APPLICABLE_TO_DATE, @EXERCISEDATE)) >=  CONVERT(DATE,@EXERCISEDATE)))  AND FFC.MIT_ID = @INSTRUMENT_ID                                           
      AND  ISNULL(RESIDENTIAL_ID,0) = 0 AND ISNULL(COUNTRY_ID,0) = 0            
                
                                
     SELECT @PERQ_FORMULA =  FORMULA_DESCRIPTION,@EVENTOFINCIDENCE =  EVENT_OF_INCIDENCE_ID            
        FROM             
      PERQUISITE_FORMULA_CONFIG AS FFC            
     WHERE            
      ((CONVERT(DATE, FFC.APPLICABLE_FROM_DATE) <= CONVERT(DATE,@EXERCISEDATE)) AND (CONVERT(DATE, ISNULL(FFC.APPLICABLE_TO_DATE, @EXERCISEDATE)) >=  CONVERT(DATE,@EXERCISEDATE))) AND FFC.MIT_ID = @INSTRUMENT_ID                                  
      AND  ISNULL(RESIDENTIAL_ID,0) = 0 AND ISNULL(COUNTRY_ID,0) = 0            
                                
     IF EXISTS(SELECT FORMULA_DESC FROM #TEMP_FORMULA WHERE FORMULA_DESC  LIKE '%@FMV@%')            
     BEGIN                
      SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@FMV@', @FMV_VALUE )                
     END            
     IF EXISTS(SELECT FORMULA_DESC FROM #TEMP_FORMULA WHERE FORMULA_DESC  LIKE '%@Exercise Price@%')            
     BEGIN              
      SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@Exercise Price@', @EXERCISEPRICE )                
     END                
     IF EXISTS(SELECT FORMULA_DESC FROM #TEMP_FORMULA WHERE FORMULA_DESC  LIKE '%@Option Exercised@%')            
     BEGIN                        
      SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@Option Exercised@',  @OPTIONEXERCISED)                      
     END                
     IF EXISTS(SELECT FORMULA_DESC FROM #TEMP_FORMULA WHERE FORMULA_DESC  LIKE '%@Face Value@%')            
     BEGIN            
      SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@Face Value@', @FACEVAUE )                  
     END                      
     IF EXISTS(SELECT FORMULA_DESC FROM #TEMP_FORMULA WHERE FORMULA_DESC  LIKE '%@Option Granted@%')            
     BEGIN            
      SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@Option Granted@', @GRANTED_OPTION )                          
     END            
     IF EXISTS(SELECT FORMULA_DESC FROM #TEMP_FORMULA WHERE FORMULA_DESC  LIKE  '%@Option Vested@%')            
     BEGIN            
      SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@Option Vested@', @OPTIONVESTED )                           
     END            
     IF EXISTS(SELECT FORMULA_DESC FROM #TEMP_FORMULA WHERE FORMULA_DESC  LIKE  '%@Settlement Price@%')                             
     BEGIN                 
      SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@Settlement Price@', @SETTLEMENT_PRICE )                      
     END                                           
                 
                 
     IF EXISTS(SELECT FORMULA_DESC FROM #TEMP_FORMULA WHERE FORMULA_DESC  LIKE  '%@Shares arising out of appreciation@%')            
     BEGIN            
                        IF(@ROUNDING_UP = 0)            
                        BEGIN            
                         SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@Shares arising out of appreciation@',  FLOOR( @SHARE_ARISING_APPR_VAL)  )            
                        END            
                        ELSE  IF(@ROUNDING_UP = 1)             
                        SET @PERQ_FORMULA = REPLACE( @PERQ_FORMULA, '@Shares arising out of appreciation@',  Ceiling( @SHARE_ARISING_APPR_VAL)  )            
                         
     END            
     SET @SQL = N'set @result = ' + @PERQ_FORMULA            
     EXEC sp_executesql @SQL, N'@result float output', @result out                      
                               
     INSERT INTO  #TEMP_PERQUISITE_DETAILS(INSTRUMENT_ID,EMPLOYEE_ID,PERQ_VALUE,EVENTOFINCIDENCE,EXERCISE_PRICE,OPTION_VESTED,EXERCISE_DATE,FMV_VALUE,OPTION_EXERCISED,GRANTED_OPTIONS ,GRANTOPTIONID,GRANTDATE ,VESTINGDATE )            
     SELECT @INSTRUMENT_ID,@EMPLOYEE_ID ,@result,@EVENTOFINCIDENCE,@EXERCISEPRICE,@OPTIONVESTED,@EXERCISEDATE,@FMV_VALUE,@OPTIONEXERCISED,@GRANTED_OPTION,@GRANTOPTIONID,@GRANTDATE,@VESTINGDATE                
            
     INSERT INTO  #TEMP_PERQPROP_DETAILS(INSTRUMENT_ID,EMPLOYEE_ID,PERQ_VALUE,EVENTOFINCIDENCE,EXERCISE_PRICE,OPTION_VESTED,EXERCISE_DATE,FMV_VALUE,OPTION_EXERCISED,GRANTED_OPTIONS ,GRANTOPTIONID,GRANTDATE ,VESTINGDATE,GRANTLEGSERIALNO,TEMP_EXERCISEID ,STOCK_VALUE)    
     SELECT @INSTRUMENT_ID,@EMPLOYEE_ID ,@result,@EVENTOFINCIDENCE,@EXERCISEPRICE,@OPTIONVESTED,@EXERCISEDATE,@FMV_VALUE,@OPTIONEXERCISED,@GRANTED_OPTION,@GRANTOPTIONID,@GRANTDATE,@VESTINGDATE,@GRANTLEGSERIALNO,@TEMP_EXERCISEID,@SHARE_ARISING_APPR_VAL    
            
     IF(@ISROPORTIONATE_VAL = 1)            
     BEGIN            
      PRINT 'CHEKKKKKKK_00'    
      DECLARE @TYPE_PROP_VALUE dbo.TYPE_PROP_VALUE_AUTO_EXE            
      DELETE  FROM @TYPE_PROP_VALUE            
            
      INSERT INTO @TYPE_PROP_VALUE SELECT INSTRUMENT_ID,EMPLOYEE_ID  ,PERQ_VALUE ,EVENTOFINCIDENCE,EXERCISE_PRICE  ,            
      OPTION_VESTED ,FMV_VALUE ,OPTION_EXERCISED ,GRANTED_OPTIONS ,EXERCISE_DATE ,GRANTOPTIONID ,GRANTDATE ,VESTINGDATE ,GRANTLEGSERIALNO,TEMP_EXERCISEID ,STOCK_VALUE           
      FROM #TEMP_PERQPROP_DETAILS              
      DELETE FROM #TEMP_PERQPROP_DETAILS            
             
        INSERT INTO #TEMP_PERQ_COUNTRY_DAYS(INSTRUMENT_ID,EMPLOYEE_ID,COUNTRY_ID,GRANTOPTIONID,TOT_DAYS,VESTINGDATE,GRANTLEGSERIALNO,FROM_DATE,TO_DATE,TEMP_EXERCISEID,STOCK_VALUE)            
         EXEC PROC_GET_PROPORTIONATE_TAX_VALUE @INSTRUMENT_ID,@TYPE_PROP_VALUE,@ISTEMPLATE             
     END             
ELSE            
     BEGIN              
           INSERT INTO #TEMP_PERQ_COUNTRY_DAYS( INSTRUMENT_ID,EMPLOYEE_ID,COUNTRY_ID,GRANTOPTIONID,TOT_DAYS,VESTINGDATE,GRANTLEGSERIALNO,FROM_DATE,TO_DATE,TEMP_EXERCISEID,STOCK_VALUE)            
           SELECT @INSTRUMENT_ID  ,@EMPLOYEE_ID ,0 ,@GRANTOPTIONID,1,@VESTINGDATE,@GRANTLEGSERIALNO ,Null,NULL,@TEMP_EXERCISEID,@SHARE_ARISING_APPR_VAL                     
     END                           
    END                        
   END            
   SET @MN_VALUE = @MN_VALUE + 1                      
   PRINT @MN_VALUE                       
  END               
            
  IF(ISNULL(@CalledFrom,'') <> 'SSRSReport')             
  BEGIN               
  PRINT 'ASAS'            
   IF(@ISROPORTIONATE_VAL = 1)            
   BEGIN                    
     SELECT INSTRUMENT_ID,EMPLOYEE_ID,COUNTRY_ID,TPCD.GRANTOPTIONID,  
     CASE WHEN (ISNULL(TOT_DAYS,0) <= 0) THEN 0 ELSE  TOT_DAYS    
      END AS TOT_DAYS            
    ,VESTINGDATE ,GRANTLEGSERIALNO,FROM_DATE,TO_DATE,TEMP_EXERCISEID,STOCK_VALUE FROM #TEMP_PERQ_COUNTRY_DAYS 
     AS TPCD  
      WHERE  GRANTOPTIONID NOT IN(SELECT GRANTOPTIONID FROM  GrantMappingOnExNow )
    
     UNION
	 
	 SELECT   INSTRUMENT_ID,EMPLOYEE_ID,COUNTRY_ID,TPCD.GRANTOPTIONID,     
     TOT_DAYS             
    ,VESTINGDATE ,GRANTLEGSERIALNO,FROM_DATE,TO_DATE,TEMP_EXERCISEID,STOCK_VALUE FROM #TEMP_PERQ_COUNTRY_DAYS  as TPCD
	  INNER JOIN  GrantMappingOnExNow AS GMOEN 
	  ON GMOEN.GrantOptionId = TPCD.GRANTOPTIONID  
	  
   END            
   ELSE            
   BEGIN              
                     
    SELECT INSTRUMENT_ID,EMPLOYEE_ID,COUNTRY_ID,GRANTOPTIONID,TOT_DAYS ,VESTINGDATE,GRANTLEGSERIALNO,FROM_DATE,TO_DATE,TEMP_EXERCISEID,STOCK_VALUE FROM #TEMP_PERQ_COUNTRY_DAYS            
   END            
  END                             
            
  IF EXISTS (SELECT * FROM SYS.tables WHERE name = 'TEMP_PERQUISITETAX_DETAILS')            
  DROP TABLE TEMP_PERQUISITETAX_DETAILS     
  
   SELECT  X.* INTO
		TEMP_PERQUISITETAX_DETAILS    
		FROM 
		(
		
		 SELECT INSTRUMENT_ID,EMPLOYEE_ID,COUNTRY_ID,TPCD.GRANTOPTIONID,  CASE WHEN (ISNULL(TOT_DAYS,0) <= 0) THEN 0 ELSE  TOT_DAYS    
          END AS TOT_DAYS  ,VESTINGDATE ,GRANTLEGSERIALNO,FROM_DATE,TO_DATE,TEMP_EXERCISEID,STOCK_VALUE		            
	     FROM #TEMP_PERQ_COUNTRY_DAYS as TPCD
          WHERE   GRANTOPTIONID NOT IN(SELECT GRANTOPTIONID FROM  GrantMappingOnExNow )
	
	     UNION
	       
    
	    SELECT  INSTRUMENT_ID,EMPLOYEE_ID,COUNTRY_ID,TPD.GRANTOPTIONID, TOT_DAYS ,VESTINGDATE ,GRANTLEGSERIALNO,FROM_DATE,TO_DATE,TEMP_EXERCISEID,STOCK_VALUE 
         FROM #TEMP_PERQ_COUNTRY_DAYS as TPD
	     INNER JOIN  GrantMappingOnExNow AS GMOEN 
	     ON GMOEN.GrantOptionId = TPD.GRANTOPTIONID   
	  
	  )X
	  

END TRY            
BEGIN CATCH            
    DECLARE @MAILBODY VARCHAR(MAX), @ERROR_NUMBER VARCHAR(50), @ERROR_SEVERITY VARCHAR(50), @ERROR_STATE VARCHAR(50),             
   @ERROR_PROCEDURE VARCHAR(500), @ERROR_LINE  VARCHAR(MAX), @ERROR_MESSAGE VARCHAR(MAX),@Subject_body NVARCHAR(250)                   
               
  SELECT             
   @ERROR_NUMBER = ERROR_NUMBER() ,@ERROR_SEVERITY = ERROR_SEVERITY() ,@ERROR_STATE = ERROR_STATE() ,@ERROR_PROCEDURE =  ERROR_PROCEDURE(),             
   @ERROR_LINE = ERROR_LINE(), @ERROR_MESSAGE = ERROR_MESSAGE()                 
              
  SET @MAILBODY = 'ERROR NUMBER -' +@ERROR_NUMBER+','+ 'ERROR SEVERITY -' +@ERROR_SEVERITY+','+ 'ERROR STATE -' +@ERROR_STATE+','+ 'ERROR PROCEDURE -' +@ERROR_PROCEDURE+','+ 'ERROR LINE -' +@ERROR_LINE+','+ 'ERROR MESSAGE -' +@ERROR_MESSAGE            
              
  SET @Subject_body='Error Occured on [Date:'+CONVERT(NVARCHAR(50),GETDATE())+']'            
               
  -- SEND MAIL --              
  DECLARE @TAB CHAR(1) = CHAR(9)            
  EXECUTE             
   msdb.dbo.sp_send_dbmail               
   @recipients = 'esopit@esopdirect.com',               
   @subject = @Subject_body,             
   @body = @MAILBODY,              
   @body_format = 'HTML',            
   @query = '',             
   @attach_query_result_as_file = 0,            
   @query_attachment_filename = NULL,            
   @query_result_separator = @TAB,            
   @query_result_no_padding = 1            
  PRINT @MAILBODY                          
END CATCH                  
 DROP TABLE #TEMP_EMPLOYEE_DETAILS            
 DROP TABLE #TEMP_FORMULA            
 DROP TABLE #TEMP_PERQUISITE_DETAILS                
 DROP TABLE #TEMP_FINAL_PRAPORTIONATE               
             
 --drop table #TEMP_PERQ_COUNTRY_DAYS             
            
 IF EXISTS (SELECT * FROM SYS.tables WHERE name = 'TEMP_SAR_SETTLEMENT_FINAL_DETAILS')            
 BEGIN            
  DROP TABLE TEMP_SAR_SETTLEMENT_FINAL_DETAILS            
 END            
                    
 SET NOCOUNT OFF;              
END
GO


