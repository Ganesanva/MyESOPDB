DROP PROCEDURE IF EXISTS [dbo].[PROC_SAVE_INSTRUMENTDETAILS]
GO
/****** Object:  StoredProcedure [dbo].[PROC_SAVE_INSTRUMENTDETAILS]    Script Date: 18-07-2022 15:23:35 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[PROC_SAVE_INSTRUMENTDETAILS]
    @INSTRUMENT_DETAILS  dbo.TYPE_INSTRUMENT_DETAILS READONLY,
    @USER_ID NVARCHAR(200),
    @INSTRUMENT_IDS  VARCHAR(50),
    @TrustDBName NVARCHAR(100),    
	@MESSAGE_OUT	VARCHAR(100) OUTPUT
AS
BEGIN
	
	SET NOCOUNT ON;	
   
    DECLARE @MN_VALUE INT, @MX_VALUE INT, @COUNT INT, @INSTRUMENTNAME VARCHAR(MAX),@FMVCOUNT INT,@PERCOUNT INT,@TAXCOUNT INT,
    @SQL_TRUST  AS NVARCHAR(MAX), @COMPANY_ID VARCHAR(100),  @COMPANY_EXISTS NVARCHAR(100),
	@CURRENCY_ALIAS NVARCHAR (10), @CURRENCY_SYMBOL NVARCHAR (10),@CURRENCY_NAME NVARCHAR(50)

    CREATE TABLE #TEMP_INSTRUMENTS
    (
		INSTRUMENT_NAME VARCHAR(100)
    )
    
    CREATE TABLE #TEMP_COMPANY_MAPPING
    (
		MIT_ID INT, INS_DISPLY_NAME NVARCHAR(500), CurrencyID INT, MSE_ID VARCHAR(200),
		SEM_VAL_RPT_ID INT, IS_ENABLED TINYINT,IsActivatedAccount VARCHAR(1), CREATED_ON DATETIME
    )
                  
    INSERT INTO #TEMP_COMPANY_MAPPING 
	(
		  MIT_ID, CurrencyID, MSE_ID, SEM_VAL_RPT_ID, IS_ENABLED,IsActivatedAccount, INS_DISPLY_NAME, CREATED_ON
	)
	SELECT 
		MIT_ID, CurrencyID, MSE_ID, SEM_VAL_RPT_ID, IS_ENABLED,IsActivatedAccount,INS_DISPLY_NAME, GETDATE()
	FROM @INSTRUMENT_DETAILS
		 				 
	SELECT @MN_VALUE = MIN(MIT_ID ),@MX_VALUE = MAX(MIT_ID) FROM #TEMP_COMPANY_MAPPING	
   
	BEGIN TRY	

	   BEGIN TRANSACTION	
	   SET @COUNT =(SELECT COUNT(SchemeId)
	   FROM Scheme WHERE CONVERT(VARCHAR(50), MIT_ID) 
	   IN (SELECT * FROM dbo.FN_SPLIT_STRING(@INSTRUMENT_IDS,',')))
	   	   
	   	   
	   SELECT @FMVCOUNT = COUNT(FFC_ID) FROM  FMV_FORMULA_CONFIG  WHERE CONVERT(VARCHAR(50), MIT_ID) 
	   IN (SELECT * FROM dbo.FN_SPLIT_STRING(@INSTRUMENT_IDS,','))

	   SELECT @PERCOUNT = COUNT(PFC_ID) FROM PERQUISITE_FORMULA_CONFIG WHERE CONVERT(VARCHAR(50), MIT_ID) 
	   IN (SELECT * FROM dbo.FN_SPLIT_STRING(@INSTRUMENT_IDS,','))
	 
	   SELECT @TAXCOUNT = COUNT(TRSC_ID) FROM TAX_RATE_SETTING_CONFIG WHERE CONVERT(VARCHAR(50), MIT_ID) 
	   IN (SELECT * FROM dbo.FN_SPLIT_STRING(@INSTRUMENT_IDS,','))
	   
 
	    IF(@COUNT = 0 AND @FMVCOUNT = 0 AND  @PERCOUNT = 0 AND @TAXCOUNT = 0 )
	    BEGIN
			SET @COMPANY_ID = (SELECT DB_NAME())
			SELECT @SQL_TRUST=N'SELECT @CompanyExists = COUNT(COMPANY_ID) FROM ' + @TrustDBName + '..GLOBAL_CASHLESS_SETTINGS (nolock) WHERE COMPANY_ID = ' + CHAR(39) + @COMPANY_ID + CHAR(39)
		
			EXEC sp_executesql @SQL_TRUST, N'@CompanyExists  nvarchar(100) output', @COMPANY_EXISTS output
			print @COMPANY_EXISTS
			
			IF @COMPANY_EXISTS > 0            
			BEGIN                 
			          Print 'Step delete'    
				SET @SQL_TRUST = 'DELETE  FROM ' + @TrustDBName + '..GLOBAL_CASHLESS_SETTINGS WHERE COMPANY_ID = ''' + @COMPANY_ID + ''''  
				EXEC (@SQL_TRUST)
				/*Begin Insertion*/
				BEGIN TRY
				Print 'Step insert delete'    
				SELECT 
							@CURRENCY_ALIAS = CRM.CurrencyAlias, 
							@CURRENCY_SYMBOL = CRM.CurrencySymbol,
							@CURRENCY_NAME=  CRM.CurrencyName
						FROM 
							CompanyMaster CM INNER JOIN MST_STOCK_EXCHANGE MSE ON CM.StockExchangeType = MSE.MSE_ID
							INNER JOIN CurrencyMaster CRM ON CRM.CurrencyID  = MSE.CurrencyID
							INNER JOIN MST_INSTRUMENT_TYPE MIT ON MSE.MSE_ID=MIT.MIT_ID

							--Select  @CURRENCY_ALIAS ,@CURRENCY_SYMBOL ,		@CURRENCY_NAME 
				    SET @SQL_TRUST =
								(' 
									INSERT INTO ' + @TrustDBName + '..GLOBAL_CASHLESS_SETTINGS 
									(
										COMPANY_ID, MIT_ID, INS_DISPLY_NAME, CURRENCY_SYMBOL, CURRENCY_ALIAS,CURRENCY_NAME, ACTIVE,
										UPDATED_BY, UPDATED_ON, CREATED_BY, CREATED_ON
									)									
									SELECT 
										''' + @COMPANY_ID + ''',''' +  CONVERT(VARCHAR(10),@MN_VALUE) + ''',TCIM.INS_DISPLY_NAME,''' + @CURRENCY_SYMBOL + ''',''' + @CURRENCY_ALIAS + ''',''' + @CURRENCY_NAME + ''', 1,
										''' + @USER_ID + ''', GETDATE(),''' + @USER_ID + ''', GETDATE() 
									FROM 
										#TEMP_COMPANY_MAPPING TCIM	WHERE TCIM.MIT_ID = ''' +  CONVERT(VARCHAR(10),@MN_VALUE) + ''' 							
								 ')

								 Print @SQL_TRUST 
					EXEC (@SQL_TRUST)
				END TRY
				BEGIN CATCH
					SELECT ERROR_MESSAGE()
				END CATCH
				/*End insertion*/
			END 
			ELSE
			BEGIN
				BEGIN TRY
				Print 'Step insert'    
				SELECT 
							@CURRENCY_ALIAS = CRM.CurrencyAlias, 
							@CURRENCY_SYMBOL = CRM.CurrencySymbol,
							@CURRENCY_NAME=  CRM.CurrencyName
						FROM 
							CompanyMaster CM INNER JOIN MST_STOCK_EXCHANGE MSE ON CM.StockExchangeType = MSE.MSE_ID
							INNER JOIN CurrencyMaster CRM ON CRM.CurrencyID  = MSE.CurrencyID
							INNER JOIN MST_INSTRUMENT_TYPE MIT ON MSE.MSE_ID=MIT.MIT_ID

							--Select  @CURRENCY_ALIAS ,@CURRENCY_SYMBOL ,		@CURRENCY_NAME 
				    SET @SQL_TRUST =
								(' 
									INSERT INTO ' + @TrustDBName + '..GLOBAL_CASHLESS_SETTINGS 
									(
										COMPANY_ID, MIT_ID, INS_DISPLY_NAME, CURRENCY_SYMBOL, CURRENCY_ALIAS,CURRENCY_NAME, ACTIVE,
										UPDATED_BY, UPDATED_ON, CREATED_BY, CREATED_ON
									)									
									SELECT 
										''' + @COMPANY_ID + ''',''' +  CONVERT(VARCHAR(10),@MN_VALUE) + ''',TCIM.INS_DISPLY_NAME,''' + @CURRENCY_SYMBOL + ''',''' + @CURRENCY_ALIAS + ''',''' + @CURRENCY_NAME + ''', 1,
										''' + @USER_ID + ''', GETDATE(),''' + @USER_ID + ''', GETDATE() 
									FROM 
										#TEMP_COMPANY_MAPPING TCIM	WHERE TCIM.MIT_ID = ''' +  CONVERT(VARCHAR(10),@MN_VALUE) + ''' 							
								 ')

								 Print @SQL_TRUST 
					EXEC (@SQL_TRUST)
				END TRY
				BEGIN CATCH
					SELECT ERROR_MESSAGE()
				END CATCH
			END
			
			WHILE(@MN_VALUE <= @MX_VALUE)
			BEGIN
				IF((SELECT COUNT(MIT_ID) AS MIT_ID FROM COMPANY_INSTRUMENT_MAPPING WHERE MIT_ID = @MN_VALUE)=1)
					BEGIN	
						UPDATE COMPANY_INSTRUMENT_MAPPING 
						SET 
							CurrencyID = TCIM.CurrencyID,
							MSE_ID = TCIM.MSE_ID,
							SEM_VAL_RPT_ID = TCIM.SEM_VAL_RPT_ID,
							IS_ENABLED = TCIM.IS_ENABLED,
							IsActivatedAccount=TCIM.IsActivatedAccount,
							INS_DISPLY_NAME = TCIM.INS_DISPLY_NAME,
							UPDATED_ON = GETDATE(),
							UPDATED_BY = @USER_ID
						FROM #TEMP_COMPANY_MAPPING TCIM
						INNER JOIN COMPANY_INSTRUMENT_MAPPING ON TCIM.MIT_ID = COMPANY_INSTRUMENT_MAPPING.MIT_ID 
						WHERE COMPANY_INSTRUMENT_MAPPING.MIT_ID = @MN_VALUE
                   
						--BEGIN This section is used to update CurrencyAlias, CurrencySymbol, CurrencyName and InstrumentDisplayName at Trust end 
						
						(SELECT 
							@CURRENCY_ALIAS = CRM.CurrencyAlias, 
							@CURRENCY_SYMBOL = CRM.CurrencySymbol,
							@CURRENCY_NAME=  CRM.CurrencyName
						FROM 
							CompanyMaster CM INNER JOIN MST_STOCK_EXCHANGE MSE ON CM.StockExchangeType = MSE.MSE_ID
							INNER JOIN CurrencyMaster CRM ON CRM.CurrencyID  = MSE.CurrencyID
							INNER JOIN MST_INSTRUMENT_TYPE MIT ON MSE.MSE_ID=MIT.MIT_ID)				
						
						--END This section is used to update CurrencyAlias, CurrencySymbol, CurrencyName and InstrumentDisplayName at Trust end 
					
					END
				ELSE
					BEGIN		
						INSERT INTO COMPANY_INSTRUMENT_MAPPING 
						(
							MIT_ID, CurrencyID, MSE_ID, SEM_VAL_RPT_ID, IS_ENABLED,IsActivatedAccount, INS_DISPLY_NAME, 
							CREATED_ON, CREATED_BY, UPDATED_ON, UPDATED_BY		
						)
						SELECT 
							MIT_ID, CurrencyID, MSE_ID, SEM_VAL_RPT_ID, IS_ENABLED,IsActivatedAccount, INS_DISPLY_NAME, 
							GETDATE(), @USER_ID, GETDATE(), @USER_ID
						FROM #TEMP_COMPANY_MAPPING TCIM
						WHERE TCIM.MIT_ID = @MN_VALUE		 
					END
				 
				 SET @MN_VALUE = @MN_VALUE + 1		
			END					
		
			IF(@INSTRUMENT_IDS IS NOT NULL)
			BEGIN		
				UPDATE COMPANY_INSTRUMENT_MAPPING 
							SET 
								CurrencyID = 0,						
								SEM_VAL_RPT_ID = 0,
								IS_ENABLED =0,
								INS_DISPLY_NAME = NULL,
								MSE_ID = '',
								IsActivatedAccount=NULL,
								UPDATED_ON = GETDATE(),
								UPDATED_BY = @USER_ID
				 WHERE CONVERT(VARCHAR(50), MIT_ID) IN(SELECT * FROM dbo.FN_SPLIT_STRING(@INSTRUMENT_IDS,','))

			END	
			
			SET @MESSAGE_OUT =  1
		END	
		ELSE
		BEGIN
		    INSERT INTO 
		    #TEMP_INSTRUMENTS
			SELECT DISTINCT MST.INSTRUMENT_NAME  
			FROM Scheme sh
			INNER JOIN  MST_INSTRUMENT_TYPE MST on MST.MIT_ID = sh.MIT_ID
			WHERE CONVERT(VARCHAR(50), sh.MIT_ID) IN(SELECT * FROM dbo.FN_SPLIT_STRING(@INSTRUMENT_IDS,','))
			
			SELECT @INSTRUMENTNAME = COALESCE(@INSTRUMENTNAME+',' , '') +  INSTRUMENT_NAME FROM #TEMP_INSTRUMENTS
			
			SET @MESSAGE_OUT = '2|'+ @INSTRUMENTNAME 
			-- print @MESSAGE_OUT
		END		
		
			
		COMMIT TRANSACTION
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION
		SET @MESSAGE_OUT = @@ERROR
	END CATCH
	
	DROP TABLE #TEMP_COMPANY_MAPPING	
	DROP TABLE #TEMP_INSTRUMENTS	
	SET NOCOUNT OFF;			
END
GO


