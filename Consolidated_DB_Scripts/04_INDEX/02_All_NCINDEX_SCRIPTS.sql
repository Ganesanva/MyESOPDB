 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = '<NonCIndexCan, CancelledInx,>'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [<NonCIndexCan, CancelledInx,>] ON [dbo].[Cancelled](GrantLegSerialNumber ASC) 
INCLUDE (CancelledQuantity, SplitCancelledQuantity, BonusSplitCancelledQuantity)
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF, FILLFACTOR =95) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = 'Cancelled_BonusSplitCancelledQuantity'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [Cancelled_BonusSplitCancelledQuantity] ON [dbo].[Cancelled](BonusSplitCancelledQuantity ASC) 
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = 'Cancelled_CancelledDate'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [Cancelled_CancelledDate] ON [dbo].[Cancelled](CancelledDate ASC) 
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = 'Cancelled_CancelledQuantity'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [Cancelled_CancelledQuantity] ON [dbo].[Cancelled](CancelledQuantity ASC) 
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = 'Cancelled_SplitCancelledQuantity'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [Cancelled_SplitCancelledQuantity] ON [dbo].[Cancelled](SplitCancelledQuantity ASC) 
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = 'IX_EmployeeAcceptance'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [IX_EmployeeAcceptance] ON [dbo].[EmployeeAcceptance](EmpAcceptanceID ASC) 
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF, FILLFACTOR =90) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = 'IndexEmp, DOTIndex,>'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [IndexEmp, DOTIndex,>] ON [dbo].[EmployeeMaster](DateOfTermination ASC, ReasonForTermination ASC, LWD ASC) 
INCLUDE (LastUpdatedBy, LastUpdatedOn)
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF, FILLFACTOR =95) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = 'NonClusEmpM, EMpLoginIndx,>'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [NonClusEmpM, EMpLoginIndx,>] ON [dbo].[EmployeeMaster](LoginID ASC) 
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF, FILLFACTOR =95) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = 'GrantLeg_FinalVestingDate'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [GrantLeg_FinalVestingDate] ON [dbo].[GrantLeg](FinalVestingDate ASC) 
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF, FILLFACTOR =100) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = 'GrantLeg_GrantLegId'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [GrantLeg_GrantLegId] ON [dbo].[GrantLeg](GrantLegId ASC) 
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF, FILLFACTOR =100) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = 'GrantLeg_GrantOptionId'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [GrantLeg_GrantOptionId] ON [dbo].[GrantLeg](GrantOptionId ASC) 
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF, FILLFACTOR =100) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = 'GrantLeg_GrantRegistrationId'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [GrantLeg_GrantRegistrationId] ON [dbo].[GrantLeg](GrantRegistrationId ASC) 
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF, FILLFACTOR =100) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = 'GrantLeg_SchemeId'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [GrantLeg_SchemeId] ON [dbo].[GrantLeg](SchemeId ASC) 
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF, FILLFACTOR =100) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = 'GrantLeg_VestingType'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [GrantLeg_VestingType] ON [dbo].[GrantLeg](VestingType ASC) 
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF, FILLFACTOR =100) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = 'ON_GRNAT_LEG'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [ON_GRNAT_LEG] ON [dbo].[GrantLeg](GrantRegistrationId ASC, GrantOptionId ASC, GrantLegId ASC, VestingType ASC) 
INCLUDE (GrantedQuantity, FinalVestingDate, CancelledQuantity, UnapprovedExerciseQuantity, ExercisedQuantity, LapsedQuantity, IsPerfBased)
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF, FILLFACTOR =100) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = '<NonCIndesx, GopIDEmpD>'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [<NonCIndesx, GopIDEmpD>] ON [dbo].[GrantOptions](EmployeeId ASC) 
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF, FILLFACTOR =95) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = 'GrantOptions_GrantOptionId'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [GrantOptions_GrantOptionId] ON [dbo].[GrantOptions](GrantOptionId ASC) 
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF, FILLFACTOR =100) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = 'GrantOptions_GrantRegistrationId'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [GrantOptions_GrantRegistrationId] ON [dbo].[GrantOptions](GrantRegistrationId ASC) 
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF, FILLFACTOR =100) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = 'GrantOptions_SchemeId'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [GrantOptions_SchemeId] ON [dbo].[GrantOptions](SchemeId ASC) 
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF, FILLFACTOR =100) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = 'GrantRegistration_GrantDate'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [GrantRegistration_GrantDate] ON [dbo].[GrantRegistration](GrantDate ASC) 
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF, FILLFACTOR =100) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = 'GrantRegistration_GrantRegistrationId'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [GrantRegistration_GrantRegistrationId] ON [dbo].[GrantRegistration](GrantRegistrationId ASC) 
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF, FILLFACTOR =100) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = '<NonClusterIndx, GrantOptionIDLapseDate>'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [<NonClusterIndx, GrantOptionIDLapseDate>] ON [dbo].[LapseTrans](GrantLegID ASC) 
INCLUDE (GrantOptionID, LapseDate)
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF, FILLFACTOR =95) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = '<NonShindxIndex, Shexindex,>'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [<NonShindxIndex, Shexindex,>] ON [dbo].[ShExercisedOptions](IsMassUpload ASC, Action ASC, Cash ASC) 
INCLUDE (GrantLegSerialNumber, ExercisedQuantity, ExercisePrice, ExerciseDate, ExerciseNo, PerqstValue, PerqstPayable, FMVPrice, PaymentMode, isFormGenerate)
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF, FILLFACTOR =95) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = 'IndexShEx, ShIndex,>'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [IndexShEx, ShIndex,>] ON [dbo].[ShExercisedOptions](GrantLegSerialNumber ASC) 
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF, FILLFACTOR =95) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = 'NonCIndexShEx, ShExIndx,>'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [NonCIndexShEx, ShExIndx,>] ON [dbo].[ShExercisedOptions](GrantLegId ASC) 
INCLUDE (GrantLegSerialNumber, ExercisedQuantity)
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF, FILLFACTOR =95) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = 'NonShExerciseIndex, Shexindex1,>'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [NonShExerciseIndex, Shexindex1,>] ON [dbo].[ShExercisedOptions](GrantLegId ASC) 
INCLUDE (GrantLegSerialNumber, ExercisedQuantity)
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF, FILLFACTOR =95) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = 'NonShexIndex2, ShexerIndexExNo,>'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [NonShexIndex2, ShexerIndexExNo,>] ON [dbo].[ShExercisedOptions](ExerciseNo ASC) 
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF, FILLFACTOR =95) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = 'NonShexIndex3, ShExerciedIndex,>'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [NonShexIndex3, ShExerciedIndex,>] ON [dbo].[ShExercisedOptions](GrantLegSerialNumber ASC) 
INCLUDE (ExercisedQuantity, SplitExercisedQuantity, ExercisePrice, ExerciseDate, EmployeeID, ValidationStatus, Action, ExerciseNo, LotNumber, PerqstValue, PerqstPayable, FMVPrice, Perq_Tax_rate, PaymentMode, ExerciseFormReceived, ReceivedDate, ExerciseSARid, IsPaymentDeposited, PaymentDepositedDate, IsPaymentConfirmed, PaymentConfirmedDate, IsExerciseAllotted, ExerciseAllotedDate, IsAllotmentGenerated, AllotmentGenerateDate, IsAllotmentGeneratedReversed, AllotmentGeneratedReversedDate)
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF, FILLFACTOR =95) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = 'NonShexIndex3, ShGrantLegSIndx,>'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [NonShexIndex3, ShGrantLegSIndx,>] ON [dbo].[ShExercisedOptions](GrantLegId ASC) 
INCLUDE (GrantLegSerialNumber, ExercisedQuantity)
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF, FILLFACTOR =95) ON [PRIMARY] END;
 

 IF NOT EXISTS (
SELECT 'X'
FROM SYS.INDEXES 
WHERE  NAME = 'NonShexIndexExNo, ExerNoIndex,>'
 )
 BEGIN
 CREATE NONCLUSTERED INDEX [NonShexIndexExNo, ExerNoIndex,>] ON [dbo].[ShExercisedOptions](EmployeeID ASC, ExerciseNo ASC) 
WITH (PAD_INDEX = OFF, ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, SORT_IN_TEMPDB = OFF, FILLFACTOR =95) ON [PRIMARY] END;
 
IF NOT EXISTS (
				SELECT  'X'
				FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
				WHERE TABLE_NAME='tempPerqstTaxExceptionRule'
				AND   CONSTRAINT_NAME LIKE '%Grant%'
			  )
BEGIN
  ALTER TABLE [DBO].[TEMPPERQSTTAXEXCEPTIONRULE]  WITH CHECK ADD FOREIGN KEY([GRANTOPTIONID])
  REFERENCES [DBO].[GRANTOPTIONS] ([GRANTOPTIONID])
END


